{"version":3,"sources":["index.js"],"names":["useGesture","createUseGesture","dragAction","pinchAction","Drag","_useState","useState","imageLeft","imageTop","_useState2","Object","_tmp_deploys_p4oi0_ckwkdtvl704qd0us842a06hrh_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","values","setValues","ref","React","useRef","onDrag","_ref","pinching","cancel","_ref$offset","offset","x","y","_tmp_deploys_p4oi0_ckwkdtvl704qd0us842a06hrh_source_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","onPinch","_ref2","_ref2$origin","origin","ox","oy","first","ms","movement","_ref2$offset","memo","_ref$current$getBound","current","getBoundingClientRect","width","height","tx","ty","target","drag","from","pinch","scaleBounds","min","max","rubberband","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","react_konva__WEBPACK_IMPORTED_MODULE_4__","window","innerWidth","innerHeight","radius","fill","render","document","getElementById"],"mappings":"+MAMMA,EAAaC,2BAAiB,CAACC,IAAYC,MAEjD,SAASC,IAAO,IAAAC,EACcC,mBAAS,CACnCC,UAAW,EACXC,SAAU,IAHEC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACPO,EADOH,EAAA,GACCI,EADDJ,EAAA,GAKRK,EAAMC,IAAMC,OAAO,MAgCzB,OA9BAhB,EACE,CAGEiB,OAAQ,SAAAC,GAAmD,IAAhDC,EAAgDD,EAAhDC,SAAUC,EAAsCF,EAAtCE,OAAsCC,EAAAX,OAAAC,EAAA,EAAAD,CAAAQ,EAA9BI,OAA8B,GAArBC,EAAqBF,EAAA,GAAlBG,EAAkBH,EAAA,GAAAX,OAAAe,EAAA,EAAAf,CAAAQ,EAAA,gCACzD,GAAIC,EAAU,OAAOC,IACrBP,EAAU,CAAEN,UAAWgB,EAAGf,SAAUgB,KAGtCE,QAAS,SAAAC,GAAuE,IAAAC,EAAAlB,OAAAC,EAAA,EAAAD,CAAAiB,EAApEE,OAAoE,GAA3DC,EAA2DF,EAAA,GAAvDG,EAAuDH,EAAA,GAAlDI,EAAkDL,EAAlDK,MAAkBC,EAAgCvB,OAAAC,EAAA,EAAAD,CAAAiB,EAA3CO,SAA2C,MAAAC,EAAAzB,OAAAC,EAAA,EAAAD,CAAAiB,EAA3BL,OAA2B,GAAXc,GAAWD,EAAA,GAAAA,EAAA,GAAAR,EAAXS,MACnE,GAAIJ,EAAO,KAAAK,EACuBvB,EAAIwB,QAAQC,wBAApCC,EADCH,EACDG,MAAOC,EADNJ,EACMI,OACTC,EAAKZ,GAFFO,EACcd,EACFiB,EAAQ,GACvBG,EAAKZ,GAHFM,EACiBb,EAELiB,EAAS,GAC9BL,EAAO,CAACxB,EAAOL,UAAWK,EAAOJ,SAAUkC,EAAIC,GAGjD,IAAMpB,EAAIa,EAAK,GAAKH,EAAKG,EAAK,GACxBZ,EAAIY,EAAK,GAAKH,EAAKG,EAAK,GAG9B,OAFAvB,EAAU,CAAEN,UAAWgB,EAAGf,SAAUgB,IAE7BY,IAGX,CACEQ,OAAQ9B,EACR+B,KAAM,CAAEC,KAAM,iBAAM,CAAClC,EAAOL,UAAWK,EAAOJ,YAC9CuC,MAAO,CAAEC,YAAa,CAAEC,IAAK,GAAKC,IAAK,GAAKC,YAAY,KAI1DC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOhB,MAAOiB,OAAOC,WAAYjB,OAAQgB,OAAOE,aAC9CP,EAAAC,EAAAC,cAACE,EAAA,MAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,OAAD,CACE1C,IAAKA,EAOLS,EAAGX,EAAOL,UACViB,EAAGZ,EAAOJ,SACVoD,OAAQ,IACRC,KAAK,UAIXT,EAAAC,EAAAC,cAAA,gBACM1C,EAAOL,UADb,QAC6BK,EAAOJ,SAAU,MAMpDsD,iBAAOV,EAAAC,EAAAC,cAAClD,EAAD,MAAU2D,SAASC,eAAe","file":"static/js/main.c47262cd.chunk.js","sourcesContent":["import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport { Stage, Layer, Circle } from 'react-konva'\nimport './styles.css'\nimport { createUseGesture, dragAction, pinchAction } from '@use-gesture/react'\n\nconst useGesture = createUseGesture([dragAction, pinchAction])\n\nfunction Drag() {\n  const [values, setValues] = useState({\n    imageLeft: 0,\n    imageTop: 0\n  })\n  const ref = React.useRef(null)\n\n  useGesture(\n    {\n      // onHover: ({ active, event }) => console.log('hover', event, active),\n      // onMove: ({ event }) => console.log('move', event),\n      onDrag: ({ pinching, cancel, offset: [x, y], ...rest }) => {\n        if (pinching) return cancel()\n        setValues({ imageLeft: x, imageTop: y })\n        // api.start({ x, y })\n      },\n      onPinch: ({ origin: [ox, oy], first, movement: [ms], offset: [s, a], memo }) => {\n        if (first) {\n          const { width, height, x, y } = ref.current.getBoundingClientRect()\n          const tx = ox - (x + width / 2)\n          const ty = oy - (y + height / 2)\n          memo = [values.imageLeft, values.imageTop, tx, ty]\n        }\n\n        const x = memo[0] - ms * memo[2]\n        const y = memo[1] - ms * memo[3]\n        setValues({ imageLeft: x, imageTop: y })\n\n        return memo\n      }\n    },\n    {\n      target: ref,\n      drag: { from: () => [values.imageLeft, values.imageTop] },\n      pinch: { scaleBounds: { min: 0.5, max: 2 }, rubberband: true }\n    }\n  )\n  return (\n    <div className=\"container\">\n      <Stage width={window.innerWidth} height={window.innerHeight}>\n        <Layer>\n          <Circle\n            ref={ref}\n            // onMouseDown={e => {\n            //   props.onMouseDown(e.evt)\n            // }}\n            // onTouchStart={e => {\n            //   props.onTouchStart(e.evt)\n            // }}\n            x={values.imageLeft}\n            y={values.imageTop}\n            radius={100}\n            fill=\"red\"\n          />\n        </Layer>\n      </Stage>\n      <h1>\n        x: {values.imageLeft}, y: {values.imageTop}{' '}\n      </h1>\n    </div>\n  )\n}\n\nrender(<Drag />, document.getElementById('root'))\n"],"sourceRoot":""}